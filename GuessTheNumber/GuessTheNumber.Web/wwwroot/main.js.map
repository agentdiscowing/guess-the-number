{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/auth.service.ts","./src/app/auth/login/login.component.ts","./src/app/auth/login/login.component.html","./src/app/auth/register/register.component.ts","./src/app/auth/register/register.component.html","./src/app/http-interceptors/index.ts","./src/app/http-interceptors/jwtInterceptor.ts","./src/app/shared/nav/nav.component.ts","./src/app/shared/nav/nav.component.html","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst appRoutes: Routes = [];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AppRoutingModule {}","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Guess the Number';\n}\n","<div class=\"container\">\r\n  <app-nav></app-nav>\r\n  <router-outlet></router-outlet>\r\n</div>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { AuthModule } from './auth/auth.module'\r\nimport { AppComponent } from './app.component';\r\nimport { httpInterceptorProviders } from './http-interceptors';\r\nimport { SharedModule } from './shared/shared.module';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AuthRoutingModule } from './auth/auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    HttpClientModule,\r\n    AuthModule,\r\n    SharedModule,\r\n    AppRoutingModule,\r\n    AuthRoutingModule\r\n  ],\r\n  providers: [httpInterceptorProviders],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { RegisterComponent } from './register/register.component';\n\nconst appRoutes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: 'register', component: RegisterComponent }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(appRoutes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class AuthRoutingModule {}\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { LoginComponent } from './login/login.component';\r\nimport { RegisterComponent } from './register/register.component';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\n\r\n@NgModule({\r\n  declarations: [LoginComponent, RegisterComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ReactiveFormsModule,\r\n    AuthRoutingModule\r\n  ],\r\n  exports:[\r\n    LoginComponent,\r\n    RegisterComponent\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { Injectable } from '@angular/core';\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { AuthResult } from './authResult';\nimport { NewUser } from './register/newUser';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  private authUrl = 'https://localhost:5001/api/Account';  // URL to web api\n\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' })\n  };\n\n  constructor(private http: HttpClient) {}\n\n  login(email: string, password: string) : Observable<AuthResult>{\n    let url = this.authUrl + \"/login\";\n    return this.http.post<AuthResult>(url, {email, password}, this.httpOptions).pipe(\n      tap({ next: (x) => { \n        this.setSession(x) \n      }})\n    );\n  }\n\n  register(newUser: NewUser) : Observable<AuthResult>{\n    let url = this.authUrl + \"/register\";\n    return this.http.post<AuthResult>(url, newUser, this.httpOptions).pipe(\n      tap({ next: (x) => { \n        this.setSession(x) \n      }})\n    );\n  }\n\n  isLoggedIn(): boolean{\n    return localStorage.getItem('id_token') !== null\n  }\n\n  logOut(): void{\n    localStorage.removeItem('id_token');\n  }\n  \n  private setSession(authResult: AuthResult) {\n    localStorage.setItem('id_token', authResult.token);\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from '@angular/forms';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n})\nexport class LoginComponent implements OnInit {\n  \n  loginForm: FormGroup;\n\n  constructor(private authService: AuthService){}\n\n  ngOnInit(): void {\n    this.loginForm = new FormGroup({\n      \"email\": new FormControl(\"\", Validators.compose(\n                                    [Validators.required, Validators.email])),\n      \"password\": new FormControl(\"\", Validators.compose(\n                                    [Validators.required, Validators.minLength(5), Validators.maxLength(60)]))\n    });\n  }\n\n  get email() { return this.loginForm.get('email'); }\n\n  get password() { return this.loginForm.get('password'); }\n\n  login(){\n    if(this.loginForm.valid){\n      this.authService.login(this.email.value, this.password.value).subscribe(\n        _ => alert(\"Logged in\"),\n        error => console.log(error.error)\n      );\n    }\n  }\n}\n","<form [formGroup]=\"loginForm\" (ngSubmit)=\"login()\" class=\"mt-4\">\n    <div class=\"form-group col-md-8 offset-md-2\">\n      <label for=\"\">Email address</label>\n      <input type=\"email\" class=\"form-control\" id=\"\" placeholder=\"Enter email\" [formControl]=\"email\">\n    </div>\n      <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n        <div *ngIf=\"email.errors.required\">\n          Email is required.\n        </div>\n        <div *ngIf=\"email.errors.email\">\n            Invalid email format.\n          </div>\n      </div>\n    <div class=\"form-group col-md-8 offset-md-2\">\n      <label for=\"\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Password\" [formControl]=\"password\">\n    </div>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n        <div *ngIf=\"password.errors.required\">\n              Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 5 characters long.\n        </div>\n        <div *ngIf=\"password.errors.maxlength\">\n              Password must be at most 60 characters long.\n        </div>\n    </div>\n    <div class=\"form-group col-md-8 offset-md-2\">\n    <button type=\"submit\" [disabled]=\"!loginForm.valid\" class=\"btn btn-primary\">Submit</button>\n    </div>\n  </form>\n","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../auth.service';\nimport { FormGroup, Validators, FormControl } from '@angular/forms';\nimport { NewUser } from './newUser';\n\n@Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html'\n})\nexport class RegisterComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private authService: AuthService) {}\n\n  get email() { return this.registerForm.get('email'); }\n\n  get password() { return this.registerForm.get('password'); }\n\n  get confirmPassword() { return this.registerForm.get('confirmPassword'); }\n\n  get username() { return this.registerForm.get('username'); }\n\n  ngOnInit(): void {\n    this.registerForm = new FormGroup({\n      \"email\": new FormControl(\"\", [Validators.required, Validators.email]),\n      \"password\": new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(60)]),\n      \"confirmPassword\": new FormControl(\"\", Validators.required),\n      \"username\": new FormControl(\"\", [Validators.required, Validators.minLength(5), Validators.maxLength(60)]) },\n      {validators: [Validators.required]});\n  }\n\n  register(){\n    if(this.registerForm.valid){\n      this.authService.register(this.registerForm.value as NewUser).subscribe(\n        _ => alert(\"Registered\"),\n        error => console.log(error.error)\n      );\n    }\n  }\n}\n","<form [formGroup]=\"registerForm\" (ngSubmit)=\"register()\" class=\"mt-4\">\n    <div class=\"form-group col-md-8 offset-md-2\">\n      <label for=\"\">Email address</label>\n      <input type=\"email\" class=\"form-control\" placeholder=\"Enter email\" [formControl]=\"email\">\n    </div>\n      <div *ngIf=\"email.invalid && (email.dirty || email.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n        <div *ngIf=\"email.errors.required\">\n          Email is required.\n        </div>\n        <div *ngIf=\"email.errors.email\">\n            Invalid email format.\n          </div>\n      </div>\n      <div class=\"form-group col-md-8 offset-md-2\">\n        <label for=\"\">Username</label>\n        <input type=\"text\" class=\"form-control\" placeholder=\"Enter username\" [formControl]=\"username\">\n      </div>\n        <div *ngIf=\"username.invalid && (username.dirty || username.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n          <div *ngIf=\"username.errors.required\">\n            Username is required.\n          </div>\n          <div *ngIf=\"username.errors.minlength\">\n            Username must be at least 5 characters long.\n            </div>\n            <div *ngIf=\"username.errors.maxlength\">\n              Username must be at most 60 characters long.\n            </div>\n        </div>\n    <div class=\"form-group col-md-8 offset-md-2\">\n      <label for=\"\">Password</label>\n      <input type=\"password\" class=\"form-control\" placeholder=\"Enter password\" [formControl]=\"password\">\n    </div>\n      <div *ngIf=\"password.invalid && (password.dirty || password.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n        <div *ngIf=\"password.errors.required\">\n              Password is required.\n        </div>\n        <div *ngIf=\"password.errors.minlength\">\n              Password must be at least 5 characters long.\n        </div>\n        <div *ngIf=\"password.errors.maxlength\">\n              Password must be at most 60 characters long.\n        </div>\n    </div>\n    <div class=\"form-group col-md-8 offset-md-2\">\n        <label for=\"\">Confirm password</label>\n        <input type=\"password\" class=\"form-control\" placeholder=\"Enter password again\" [formControl]=\"confirmPassword\">\n      </div>\n        <div *ngIf=\"confirmPassword.invalid && (confirmPassword.dirty || confirmPassword.touched)\" class=\"alert alert-danger form-group col-md-8 offset-md-2\">\n          <div *ngIf=\"confirmPassword.errors.required\">\n                Password is required.\n          </div>\n          <div *ngIf=\"confirmPassword.errors.minlength\">\n                Password must be at least 5 characters long.\n          </div>\n          <div *ngIf=\"confirmPassword.errors.maxlength\">\n                Password must be at most 60 characters long.\n          </div>\n      </div>\n    <div class=\"form-group col-md-8 offset-md-2\">\n    <button type=\"submit\" [disabled]=\"!registerForm.valid\" class=\"btn btn-primary\">Submit</button>\n    </div>\n  </form>\n","import { HTTP_INTERCEPTORS } from '@angular/common/http';\r\n\r\nimport {JwtInterceptor} from './jwtInterceptor';\r\n\r\n/** Http interceptor providers in outside-in order */\r\nexport const httpInterceptorProviders = [\r\n  { provide: HTTP_INTERCEPTORS, useClass: JwtInterceptor, multi: true },\r\n];","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpEvent, HttpInterceptor, HttpHandler, HttpRequest\r\n} from '@angular/common/http';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class JwtInterceptor implements HttpInterceptor {\r\n\r\n    intercept(req: HttpRequest<any>,\r\n              next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        const idToken = localStorage.getItem(\"id_token\");\r\n\r\n        if (idToken) {\r\n            const cloned = req.clone({\r\n                headers: req.headers.set(\"Authorization\",\r\n                    \"Bearer \" + idToken)\r\n            });\r\n\r\n            return next.handle(cloned);\r\n        }\r\n        else {\r\n            return next.handle(req);\r\n        }\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\n\nimport { AuthService } from '../../auth/auth.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n\n  readonly title : string = \"Guess the number\";\n\n  constructor(public authService: AuthService) { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n    <a class=\"navbar-brand\"> {{ title }} </a>\r\n    <button class=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#navbarNav\"\r\n            aria-controls=\"navbarNav\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\"\r\n         id=\"navbarNav\">\r\n        <ul class=\"navbar-nav ml-auto headerNav\">\r\n            <li class=\"nav-item\"\r\n                *ngIf=\"!authService.isLoggedIn();\">\r\n                <a class=\"nav-link\"\r\n                [routerLink]=\"['register']\"\r\n                routerLinkActive=\"active\">Register</a>\r\n            </li>\r\n            <li class=\"nav-item\"\r\n                *ngIf=\"!authService.isLoggedIn();\">\r\n                <a class=\"nav-link\"\r\n                [routerLink]=\"['login']\"\r\n                routerLinkActive=\"active\">Login</a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</nav>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NavComponent } from './nav/nav.component';\r\nimport { RouterModule } from '@angular/router';\r\n\r\n@NgModule({\r\n  declarations: [NavComponent],\r\n  imports: [\r\n    CommonModule,\r\n    RouterModule\r\n  ],\r\n  exports:[\r\n    NavComponent\r\n  ]\r\n})\r\nexport class SharedModule { }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}